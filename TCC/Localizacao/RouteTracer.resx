<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFechar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>